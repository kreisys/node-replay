// Generated by CoffeeScript 1.6.3
var match, parseHeaders, pruneHeaders, writeHeaders;

parseHeaders = exports.parse = function(filename, header_lines, only) {
  var headers, key, line, name, value, _, _i, _len, _ref;
  if (only == null) {
    only = null;
  }
  headers = Object.create(null);
  for (_i = 0, _len = header_lines.length; _i < _len; _i++) {
    line = header_lines[_i];
    if (line === "") {
      continue;
    }
    _ref = line.match(/^(.*?)\:\s+(.*)$/), _ = _ref[0], name = _ref[1], value = _ref[2];
    if (only && !match(name, only)) {
      continue;
    }
    key = (name || "").toLowerCase();
    value = (value || "").trim().replace(/^"(.*)"$/, "$1");
    if (Array.isArray(headers[key])) {
      headers[key].push(value);
    } else if (headers[key]) {
      headers[key] = [headers[key], value];
    } else {
      headers[key] = value;
    }
  }
  return headers;
};

writeHeaders = exports.write = function(file, headers, only) {
  var item, name, value, _ref, _results;
  if (only == null) {
    only = null;
  }
  _ref = pruneHeaders(headers, only);
  _results = [];
  for (name in _ref) {
    value = _ref[name];
    if (Array.isArray(value)) {
      _results.push((function() {
        var _i, _len, _results1;
        _results1 = [];
        for (_i = 0, _len = value.length; _i < _len; _i++) {
          item = value[_i];
          _results1.push(file.write("" + name + ": " + item + "\n"));
        }
        return _results1;
      })());
    } else {
      _results.push(file.write("" + name + ": " + value + "\n"));
    }
  }
  return _results;
};

pruneHeaders = exports.prune = function(headers, only) {
  var name, prunedHeaders, value;
  if (only == null) {
    only = null;
  }
  prunedHeaders = {};
  for (name in headers) {
    value = headers[name];
    if (!only || match(name, only)) {
      prunedHeaders[name] = value;
    }
  }
  return prunedHeaders;
};

match = function(name, regexps) {
  var regexp, _i, _len;
  for (_i = 0, _len = regexps.length; _i < _len; _i++) {
    regexp = regexps[_i];
    if (regexp.test(name)) {
      return true;
    }
  }
  return false;
};
